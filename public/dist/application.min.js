"use strict";var ApplicationConfiguration=function(){var applicationModuleName="sense-forage",applicationModuleVendorDependencies=["ngResource","ngCookies","ngSanitize","ui.bootstrap","ui.router","ui.utils","slugifier","angulartics","angulartics.google.analytics"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$urlMatcherFactoryProvider",function($locationProvider,$urlMatcherFactoryProvider){$locationProvider.html5Mode(!0),$urlMatcherFactoryProvider.strictMode(!1)}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","article","item","/article(?:/[^/]+)?",null,null,2)}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("frontendArticle",{url:"/article",templateUrl:"/public/modules/articles/views/list-article.client.view.html"}).state("frontendArticleView",{url:"/article/:slug",templateUrl:"/public/modules/articles/views/view-article.client.view.html",data:{pageTitle:"Page View"}}).state("backendArticle",{url:"/backend/article",templateUrl:"/public/modules/articles/views/create-article.client.view.html"}).state("backendArticleEdit",{url:"/backend/article/:slug/edit",templateUrl:"/public/modules/articles/views/edit-article.client.view.html"})}]);var app=angular.module("core");app.controller("ArticlesController",["$scope","$rootScope","$stateParams","Articles","Partners","Categories",function($scope,$rootScope,$stateParams,Articles,Partners,Categories){$rootScope.pageTitle="Article List",this.articles=Articles.query({"filter[where][published]":"true"}),this.findBySlug=function(){Articles.filter({"filter[where][slug]":$stateParams.slug}).$promise.then(function(item){$scope.article=item,$rootScope.pageTitle=item.name,$scope.articleCategory=Categories.get({categoryId:$scope.article.category[0].id}),$scope.articlePartner=Partners.get({partnerId:$scope.article.partner[0].id})}),$scope.slides=[1,2,3,4,5]}}]),app.controller("ArticlesCreateController",["$scope","$location","Slug","Articles",function($scope,$location,Slug,Articles){$scope.published=[],$scope.unpublished=[],Articles.query().$promise.then(function(list){$scope.articles=list;for(var i=0;i<list.length;i++)list[i].published===!0?$scope.published.push(list[i]):$scope.unpublished.push(list[i])}),this.create=function(){var article=new Articles({name:$scope.name,slug:Slug.slugify($scope.name)});article.$save(function(response){$location.path("/backend/article"),$scope.partner=Articles.query(),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})}}]),app.controller("ArticlesEditController",["$scope","$stateParams","$location","Slug","Articles","Partners","Categories",function($scope,$stateParams,$location,Slug,Articles,Partners,Categories){this.findBySlug=function(){$scope.article=Articles.filter({"filter[where][slug]":$stateParams.slug})},this.partners=Partners.query(),this.categories=Categories.query(),this.update=function(){var article=$scope.article;article.slug=Slug.slugify(article.name),article.$update(function(){$location.path("/backend/article")},function(errorResponse){$scope.error=errorResponse.data.message})},this.addPartner=function(){var article=$scope.article;article.partner||(article.partner=[]),article.partner.push({id:""})},this.deletePartner=function(index){var article=$scope.article;article.partner.splice(index,1)},this.addCategory=function(){var article=$scope.article;article.category||(article.category=[]),article.category.push({id:""})},this.deletePartner=function(index){var article=$scope.article;article.category.splice(index,1)},this.addImage=function(){var article=$scope.article;article.image||(article.image=[]),article.image.push({link:"",descript:""})},this.deleteImage=function(index){var article=$scope.article;article.image.splice(index,1)}}]),angular.module("core").factory("Articles",["$resource","$cookies",function($resource,$cookies){return $resource("//calm-woodland-4818.herokuapp.com/api/articles/:articleId/:controller",{articleId:"@id"},{list:{method:"GET"},save:{method:"POST",headers:{Authorization:$cookies.get("user")}},published:{method:"GET"},filter:{method:"GET",params:{controller:"findOne"}},update:{method:"PUT",headers:{Authorization:$cookies.get("user")}}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("backendIndex",{url:"/backend",templateUrl:"/public/modules/backend/views/index.client.view.html"})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("backendCategory",{url:"/backend/category",templateUrl:"/public/modules/categories/views/create-category.client.view.html"}).state("backendCategoryEdit",{url:"/backend/category/:slug/edit",templateUrl:"/public/modules/categories/views/edit-category.client.view.html"})}]);var app=angular.module("core");app.controller("CategoriesCreateController",["$scope","$location","Slug","Categories",function($scope,$location,Slug,Categories){$scope.published=[],$scope.unpublished=[],Categories.query().$promise.then(function(list){$scope.categories=list;for(var i=0;i<list.length;i++)list[i].published===!0?$scope.published.push(list[i]):$scope.unpublished.push(list[i])}),this.create=function(){var category=new Categories({name:$scope.name,slug:Slug.slugify($scope.name)});category.$save(function(response){$location.path("/backend/category"),$scope.categories=Categories.query(),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})}}]),app.controller("CategoriesEditController",["$scope","$stateParams","$location","Slug","Categories",function($scope,$stateParams,$location,Slug,Categories){this.findBySlug=function(){$scope.category=Categories.filter({"filter[where][slug]":$stateParams.slug})},this.update=function(){var category=$scope.category;category.slug=Slug.slugify(category.name),category.$update(function(){$location.path("/backend/category")},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("core").factory("Categories",["$resource","$cookies",function($resource,$cookies){return $resource("//calm-woodland-4818.herokuapp.com/api/categories/:categoryId/:controller",{categoryId:"@id"},{list:{method:"GET"},save:{method:"POST",headers:{Authorization:$cookies.get("user")}},filter:{method:"GET",params:{controller:"findOne"}},update:{method:"PUT",headers:{Authorization:$cookies.get("user")}}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/404"),$stateProvider.state("home",{url:"/",templateUrl:"/public/modules/core/views/home.client.view.html",data:{pageTitle:"Home"}}).state("about",{url:"/about",templateUrl:"/public/modules/core/views/about.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","$rootScope","$window","Menus",function($scope,$rootScope,$window,Menus){$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$rootScope.url=$window.location.href,$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){$rootScope.url=$window.location.href}),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!0)}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Partners","partner","item","/partner(?:/[^/]+)?",null,null,7)}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("frontendPartner",{url:"/partner",templateUrl:"/public/modules/partners/views/list-partner.client.view.html"}).state("frontendPartnerView",{url:"/partner/:slug",templateUrl:"/public/modules/partners/views/view-partner.client.view.html",data:{pageTitle:"Page View"}}).state("backendPartner",{url:"/backend/partner",templateUrl:"/public/modules/partners/views/create-partner.client.view.html"}).state("backendPartnerEdit",{url:"/backend/partner/:slug/edit",templateUrl:"/public/modules/partners/views/edit-partner.client.view.html"})}]);var app=angular.module("core");app.controller("PartnersController",["$scope","$rootScope","$stateParams","Partners",function($scope,$rootScope,$stateParams,Partners){$rootScope.pageTitle="Partner List",this.partners=Partners.query({"filter[where][published]":"true"}),this.findBySlug=function(){Partners.filter({"filter[where][slug]":$stateParams.slug}).$promise.then(function(item){$scope.partner=item,$rootScope.pageTitle=item.name}),$scope.slides=[1,2,3,4,5]}}]),app.controller("PartnersCreateController",["$scope","$location","Slug","Partners",function($scope,$location,Slug,Partners){$scope.published=[],$scope.unpublished=[],Partners.query().$promise.then(function(list){$scope.partners=list;for(var i=0;i<list.length;i++)list[i].published===!0?$scope.published.push(list[i]):$scope.unpublished.push(list[i])}),this.create=function(){var partner=new Partners({name:$scope.name,slug:Slug.slugify($scope.name)});partner.$save(function(response){$location.path("/backend/partner"),$scope.partner=Partners.query(),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})}}]),app.controller("PartnersEditController",["$scope","$stateParams","$location","Slug","Partners",function($scope,$stateParams,$location,Slug,Partners){this.findBySlug=function(){$scope.partner=Partners.filter({"filter[where][slug]":$stateParams.slug})},this.update=function(){var partner=$scope.partner;partner.slug=Slug.slugify(partner.name),partner.$update(function(){$location.path("/backend/partner")},function(errorResponse){$scope.error=errorResponse.data.message})},this.addHeader=function(){var partner=$scope.partner;partner.header||(partner.header=[]),partner.header.push({link:""})},this.deleteHeader=function(index){var partner=$scope.partner;partner.header.splice(index,1)}}]),angular.module("core").factory("Partners",["$resource","$cookies",function($resource,$cookies){return $resource("//calm-woodland-4818.herokuapp.com/api/partners/:partnerId/:controller",{partnerId:"@id"},{list:{method:"GET"},save:{method:"POST",headers:{Authorization:$cookies.get("user")}},published:{method:"GET"},filter:{method:"GET",params:{controller:"findOne"}},update:{method:"PUT",headers:{Authorization:$cookies.get("user")}}})}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Products","product","item","/product(?:/[^/]+)?",null,null,2)}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("frontendProduct",{url:"/product",templateUrl:"/public/modules/products/views/list-product.client.view.html"}).state("frontendProductView",{url:"/product/:slug",templateUrl:"/public/modules/products/views/view-product.client.view.html",data:{pageTitle:"Page View"}}).state("backendProduct",{url:"/backend/product",templateUrl:"/public/modules/products/views/create-product.client.view.html"}).state("backendProductEdit",{url:"/backend/product/:slug/edit",templateUrl:"/public/modules/products/views/edit-product.client.view.html"})}]);var app=angular.module("core");app.controller("ProductsController",["$scope","$rootScope","$stateParams","Products","Partners","Categories",function($scope,$rootScope,$stateParams,Products,Partners,Categories){this.find=function(){$rootScope.pageTitle="Product List",$scope.products=Products.query({"filter[where][published]":"true"})},this.findBySlug=function(){Products.filter({"filter[where][slug]":$stateParams.slug}).$promise.then(function(item){$scope.product=item,$rootScope.pageTitle=item.name,$scope.productCategory=Categories.get({categoryId:$scope.product.category[0].id}),$scope.productPartner=Partners.get({partnerId:$scope.product.partner[0].id})}),$scope.slides=[1,2,3,4,5]},this.categories=Categories.query({"filter[where][published]":"true"}),$scope.showcat={},$scope.setShowCat=function(id){$scope.showcat={category:id}}}]),app.controller("ProductsCreateController",["$scope","$location","Slug","Products",function($scope,$location,Slug,Products){$scope.published=[],$scope.unpublished=[],Products.query().$promise.then(function(list){$scope.products=list;for(var i=0;i<list.length;i++)list[i].published===!0?$scope.published.push(list[i]):$scope.unpublished.push(list[i])}),this.create=function(){var product=new Products({name:$scope.name,slug:Slug.slugify($scope.name)});product.$save(function(response){$location.path("/backend/product"),$scope.product=Products.query(),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})}}]),app.controller("ProductsEditController",["$scope","$stateParams","$location","Slug","Products","Partners","Categories",function($scope,$stateParams,$location,Slug,Products,Partners,Categories){this.findBySlug=function(){$scope.product=Products.filter({"filter[where][slug]":$stateParams.slug})},this.partners=Partners.query(),this.categories=Categories.query(),this.update=function(){var product=$scope.product;product.slug=Slug.slugify(product.name),product.$update(function(){$location.path("/backend/product")},function(errorResponse){$scope.error=errorResponse.data.message})},this.addPartner=function(){var product=$scope.product;product.partner||(product.partner=[]),product.partner.push({id:""})},this.deletePartner=function(index){var product=$scope.product;product.partner.splice(index,1)},this.addCategory=function(){var product=$scope.product;product.category||(product.category=[]),product.category.push({id:""})},this.deletePartner=function(index){var product=$scope.product;product.category.splice(index,1)},this.addImage=function(){var product=$scope.product;product.image||(product.image=[]),product.image.push({link:"",descript:""})},this.deleteImage=function(index){var product=$scope.product;product.image.splice(index,1)},this.addSpec=function(){var product=$scope.product;product.specification||(product.specification=[]),product.specification.push({title:"",descript:""})},this.deleteImage=function(index){var product=$scope.product;product.specification.splice(index,1)}}]),angular.module("core").factory("Products",["$resource","$cookies",function($resource,$cookies){return $resource("//calm-woodland-4818.herokuapp.com/api/products/:productId/:controller",{productId:"@id"},{list:{method:"GET"},save:{method:"POST",headers:{Authorization:$cookies.get("user")}},published:{method:"GET"},filter:{method:"GET",params:{controller:"findOne"}},update:{method:"PUT",headers:{Authorization:$cookies.get("user")}}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("login",{url:"/login",templateUrl:"/public/modules/core/views/home.client.view.html"})}]),angular.module("core").factory("Users",["$resource",function($resource){return $resource("https://hudson-leaf-4774.herokuapp.com/api/users/:userId",{categoryId:"@_id"},{list:{method:"GET"}})}]);